# ===================================================================
#                CONFIGURACIÓN COMÚN A AMBOS ENTORNOS
# ===================================================================
spring.application.name=ggmarket

# Configuración para que Hibernate muestre el SQL que ejecuta
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Credenciales de APIs externas
igdb.client-id=ox2flj71glrmzuv62lqvqe8bbemwkn
igdb.token=5crnfclkq41sxfthzm0ce42mak19xk
igdb.api-url=https://api.igdb.com/v4

cloudinary.cloud_name=dccacrnmy
cloudinary.api_key=449121728846223
cloudinary.api_secret=Tqj3lAIQVlSpnOMb4JExa7eMAg4


# # ===================================================================
# #      BLOQUE 1: PARA TRABAJAR CON LA BASE DE DATOS LOCAL (MySQL)
# #      (Descomenta estas líneas y comenta el bloque 2)
# # ===================================================================
# spring.datasource.url=jdbc:mysql://localhost:3306/ggmarket
# spring.datasource.username=root
# # Pon tu contraseña de MySQL aquí si tienes una
# spring.datasource.password=
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update


===================================================================
     BLOQUE 2: PARA CONECTAR TU PC A LA BASE DE DATOS DE RENDER
     (Descomenta estas líneas y comenta el bloque 1)
===================================================================
spring.datasource.url=jdbc:postgresql://dpg-d16tu6h5pdvs73fotsdg-a.frankfurt-postgres.render.com/ggmarket_db?sslmode=require
spring.datasource.username=ggmarket_db_user
spring.datasource.password=UVZIjtZbePbkWczOcNkL3iSUXRmayCjx
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
Usa 'create' SOLO la primera vez para crear las tablas, luego cámbialo a 'validate' o 'none'
spring.jpa.hibernate.ddl-auto=create